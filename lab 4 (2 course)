filename = "lab4.sqlite"

install.packages("RSQLite")
library(RSQLite)

#1
# Створюємо з’єднання з базою даних
conn <- dbConnect(RSQLite::SQLite(), filename)
#формуємо запит і виконуємо його в БД
res = dbSendQuery(conn, "SELECT Title, EventType FROM Papers WHERE EventType == 'Spotlight' ORDER BY Title")
#отримуємо результати у вигляді фрейму даних
data = dbFetch(res, n = 10)
print(data)
dbClearResult(res)
dbDisconnect(conn)
# створюємо з’єдання з базою даних
> conn <- dbConnect(RSQLite::SQLite(), filename)
> #формуємо запит і виконуємо його в БД
> res = dbSendQuery(conn, "SELECT Title, EventType FROM Papers WHERE EventType == 'Spotlight' ORDER BY Title")
> #отримуємо результати у вигляді фрейму даних
> data = dbFetch(res, n = 10)
> print(data)
                                                                                          Title
1  A Tractable Approximation to Optimal Point Process Filtering: Application to Neural Encoding
2                                    Accelerated Mirror Descent in Continuous and Discrete Time
3                        Action-Conditional Video Prediction using Deep Networks in Atari Games
4                                                                      Adaptive Online Learning
5                          Asynchronous Parallel Stochastic Gradient for Nonconvex Optimization
6                                                 Attention-Based Models for Speech Recognition
7                                                       Automatic Variational Inference in Stan
8                                   Backpropagation for Energy-Efficient Neuromorphic Computing
9                       Bandit Smooth Convex Optimization: Improving the Bias-Variance Tradeoff
10                         Biologically Inspired Dynamic Textures for Probing Motion Perception
   EventType
1  Spotlight
2  Spotlight
3  Spotlight
4  Spotlight
5  Spotlight
6  Spotlight
7  Spotlight
8  Spotlight
9  Spotlight
10 Spotlight
> dbClearResult(res)
> dbDisconnect(conn)
#2
conn <- dbConnect(RSQLite::SQLite(), filename)
res = dbSendQuery(conn, "SELECT Name, Title FROM 
                  (Papers LEFT JOIN PaperAuthors on Papers.Id == PaperId) LEFT JOIN 
                  Authors on PaperAuthors.AuthorId = Authors.Id WHERE
                  Name == 'Josh Tenenbaum' ORDER BY Title"
                  )
data = dbFetch(res, n = 10)
print(data)
dbClearResult(res)
# результат2
> conn <- dbConnect(RSQLite::SQLite(), filename)
> res = dbSendQuery(conn, "SELECT Name, Title FROM 
+                   (Papers LEFT JOIN PaperAuthors on Papers.Id == PaperId) LEFT JOIN 
+                   Authors on PaperAuthors.AuthorId = Authors.Id WHERE
+                   Name == 'Josh Tenenbaum' ORDER BY Title"
+                   )
> data = dbFetch(res, n = 10)
> print(data)
            Name
1 Josh Tenenbaum
2 Josh Tenenbaum
3 Josh Tenenbaum
4 Josh Tenenbaum
                                                                                              Title
1                                                       Deep Convolutional Inverse Graphics Network
2 Galileo: Perceiving Physical Object Properties by Integrating a Physics Engine with Deep Learning
3                                                Softstar: Heuristic-Guided Probabilistic Inference
4                                                        Unsupervised Learning by Program Synthesis
> dbClearResult(res)

#3
conn <- dbConnect(RSQLite::SQLite(), filename)
res = dbSendQuery(conn, "SELECT Title FROM Papers 
                  WHERE Title LIKE '%statistical%' ORDER BY Title")
data = dbFetch(res, n = 10)
print(data)
dbClearResult(res)
 # результат3
> conn <- dbConnect(RSQLite::SQLite(), filename)
> res = dbSendQuery(conn, "SELECT Title FROM Papers 
+                   WHERE Title LIKE '%statistical%' ORDER BY Title")
> data = dbFetch(res, n = 10)
> print(data)
                                                                                 Title
1 Adaptive Primal-Dual Splitting Methods for Statistical Learning and Image Processing
2                                Evaluating the statistical significance of biclusters
3                  Fast Randomized Kernel Ridge Regression with Statistical Guarantees
4     High Dimensional EM Algorithm: Statistical Optimization and Asymptotic Normality
5                Non-convex Statistical Optimization for Sparse Tensor Graphical Model
6            Regularized EM Algorithms: A Unified Framework and Statistical Guarantees
7                            Statistical Model Criticism using Kernel Two Sample Tests
8                         Statistical Topological Data Analysis - A Kernel Perspective
> dbClearResult(res)

# 4
conn <- dbConnect(RSQLite::SQLite(), filename)
res = dbSendQuery(conn, "SELECT Name, COUNT(PaperId) AS PaperCount FROM 
                  PaperAuthors LEFT JOIN Authors on PaperAuthors.AuthorId == Authors.Id
                  GROUP BY Name
                  ORDER BY  COUNT(PaperId) DESC")
data = dbFetch(res, n = 10)
print(data)
dbClearResult(res)
# результат4
> conn <- dbConnect(RSQLite::SQLite(), filename)
> res = dbSendQuery(conn, "SELECT Name, COUNT(PaperId) AS PaperCount FROM 
+                   PaperAuthors LEFT JOIN Authors on PaperAuthors.AuthorId == Authors.Id
+                   GROUP BY Name
+                   ORDER BY  COUNT(PaperId) DESC")
> data = dbFetch(res, n = 10)
> print(data)
                   Name PaperCount
1  Pradeep K. Ravikumar          7
2               Han Liu          6
3        Lawrence Carin          6
4   Inderjit S. Dhillon          5
5               Le Song          5
6     Zoubin Ghahramani          5
7        Christopher Re          4
8      Csaba Szepesvari          4
9           Honglak Lee          4
10       Josh Tenenbaum          4
> dbClearResult(res)
